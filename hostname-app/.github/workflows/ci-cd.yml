name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    container: ubuntu:22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y build-essential cmake git gcc g++ unzip

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          echo "VCPKG_ROOT=$(pwd)/vcpkg" >> $GITHUB_ENV

      - name: Install project dependencies
        run: |
          $VCPKG_ROOT/vcpkg install drogon jsoncpp

      - name: Configure CMake
        run: |
          cmake -B build -S . \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build build --config Release -- -j $(nproc)

      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/cpp-hostname-k8s:latest
            ${{ secrets.DOCKER_USERNAME }}/cpp-hostname-k8s:${{ github.sha }}

      - name: Show image info
        run: |
          echo "Image built and pushed to Docker Hub"
          echo "Tags:"
          echo "- ${{ secrets.DOCKER_USERNAME }}/cpp-hostname-k8s:latest"
          echo "- ${{ secrets.DOCKER_USERNAME }}/cpp-hostname-k8s:${{ github.sha }}"
